/* WINDOW FUNCTION, 211P 그룹 내 순위 함수 */
-- RANK 함수 (정렬 충돌)
SELECT JOB, ENAME, SAL, 
    RANK() OVER (ORDER BY SAL DESC) ALL_RANK,
    RANK() OVER (PARTITION BY JOB ORDER BY SAL DESC) JOB_RANK
    FROM EMP;

-- 정렬
SELECT JOB, ENAME, SAL, 
    RANK() OVER (ORDER BY SAL DESC) ALL_RANK,
    RANK() OVER (PARTITION BY JOB ORDER BY SAL DESC) JOB_RANK
    FROM EMP
ORDER BY JOB;

-- JOB 기준으로 정렬이 들어갔다.
SELECT JOB, ENAME, SAL, 
    RANK() OVER (PARTITION BY JOB ORDER BY SAL DESC) JOB_RANK
    FROM EMP;

-- DENSE_RANK 함수 (동일한 순위를 하나의 건수로 취급)
SELECT JOB, ENAME, SAL, RANK() OVER (ORDER BY SAL DESC) RANK,
    DENSE_RANK() OVER (ORDER BY SAL DESC) DENSE_RANK
    FROM EMP;
    
-- ROW_NUMBER 함수 동일한 값이라도 고유한 순위를 부여한다.
-- 동일 값에 대한 순서까지 관리하고 싶다면 ORDER BY SAL DESC, ENAME) 같이 ORDERY BY 절을 이용해 추가적인 정렬 기준 정의 필요
SELECT JOB, ENAME, SAL, RANK() OVER (ORDER BY SAL DESC) RANK,
    ROW_NUMBER() OVER (ORDER BY SAL DESC) ROW_NUMBER 
    FROM EMP;
    
SELECT JOB, ENAME, SAL, RANK() OVER (ORDER BY SAL DESC) RANK,
    ROW_NUMBER() OVER (ORDER BY SAL DESC, ENAME) ROW_NUMBER 
    FROM EMP;
    
/* WINDOW FUNCTION 일반 집계함수 212P~ */
-- SUM 함수
-- PARTITION, RANGE UNBOUNDED PRECEDING
SELECT MGR, ENAME, SAL, 
    SUM(SAL) OVER (PARTITION BY MGR) MGR_SUM 
    -- PARTITION BY MGR로 매니저별로 데이터를 파티션화
    FROM EMP;

SELECT MGR, ENAME, SAL,
    SUM(SAL) OVER (PARTITION BY MGR ORDER BY SAL RANGE UNBOUNDED PRECEDING) AS MGR_SUM
    FROM EMP; -- RANGE UNBOUNDED PRECEDING 현재 행을 기준으로 파티션 내의 첫 번째 행까지의 범위를 지정한다.

-- MAX    
-- 파티션별 윈도우의 최대값을 구함
SELECT MGR, ENAME, SAL,
    MAX(SAL) OVER (PARTITION BY MGR) AS MAR_MAX
    FROM EMP;

-- INLINE VIEW를 이용해 파티션별 최대값을 가진 행만 추출
SELECT MGR, ENAME, SAL, IV_MAX_SAL FROM 
    (SELECT MGR, ENAME, SAL,
    MAX(SAL) OVER (PARTITION BY MGR) AS IV_MAX_SAL
    FROM EMP)
    WHERE SAL = IV_MAX_SAL;

-- MIN 함수 파티션별 최소 값
SELECT MGR, ENAME, TO_CHAR(HIREDATE, 'YYYY-MM-DD') AS H_DATE, SAL,
    MIN(SAL) OVER (PARTITION BY MGR ORDER BY HIREDATE) AS MGR_MIN
    FROM EMP;
    
-- AVG 함수
-- EMP 테이블에서 같은 매니저를 두고 있는 사원들의 평균 SALARY를 구하는데, 조건은
-- 같은 매니저 내에서 자기 바로 앞의 사번과 바로 뒤의 사번인 직원만을 대상으로 한다.
-- 앞에 데이터가 없을경우 : 자기자신 + 바로뒤
-- 뒤에 데이터가 없을 경우 : 앞 + 자기자신
-- 앞뒤 데이터가 모두 있을 경우 : 앞, 자기, 뒤
-- 데이터가 자기만 있을 경우 : 자신
SELECT MGR, ENAME, HIREDATE, SAL,
    ROUND (AVG(SAL) OVER (PARTITION BY MGR ORDER BY HIREDATE 
            ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING)) AS MGR_AVG
    FROM EMP;

-- 파티션이 지정되지 않았으므로 모든 건수를 대상으로 -50 ~ +150 기준에 맞는지 검사한다.
SELECT ENAME, SAL,
    COUNT(*) OVER (ORDER BY SAL RANGE BETWEEN 50 PRECEDING AND 150 FOLLOWING) AS SIM_CNT
    FROM EMP;
    